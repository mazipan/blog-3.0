---
import { Icon } from 'astro-icon/components';

import Link from '@/components/Link.astro';
import { cn } from '@/utils/styles';

import type { AnyCollection } from '@/types/common';
import type { Page } from 'astro';

export interface Props {
  url: {
    prev: Page<AnyCollection>['url']['prev'];
    next: Page<AnyCollection>['url']['next'];
    current: Page<AnyCollection>['url']['current']; // unused
  };
  currentPage: Page<AnyCollection>['currentPage'];
  lastPage: Page<AnyCollection>['lastPage'];
}

export interface PaginationProps extends Props {}

export const pickPaginationPropsFromPage = (page: Page<AnyCollection>): PaginationProps => ({
  url: page.url,
  currentPage: page.currentPage,
  lastPage: page.lastPage,
});

const { url, currentPage, lastPage } = Astro.props as Props;
const { prev, next } = url;
---

{
  lastPage > 1 ? (
    <nav role="navigation" aria-label="Pagination">
      <ul
        class={cn(
          'grid w-full grid-cols-1 justify-between gap-x-12 gap-y-4',
          prev && next && 'sm:grid-cols-2'
        )}
      >
        {next && (
          <li
            class="order-last flex flex-row justify-end"
            aria-setsize={lastPage}
            aria-posinset={currentPage + 1}
          >
            <Link href={next} variant="no-underline" class="inline-flex flex-row-reverse py-4">
              <Icon name="arrow-right" class="h-6 w-6 shrink-0" />
              <span class="text-right">Older posts</span>
            </Link>
          </li>
        )}
        {prev && (
          <li
            class="order-first flex flex-row justify-start"
            aria-setsize={lastPage}
            aria-posinset={currentPage - 1}
          >
            <Link href={prev} variant="no-underline" class="inline-flex flex-row py-4">
              <Icon name="arrow-left" class="h-6 w-6 shrink-0" />
              <span>Newer posts</span>
            </Link>
          </li>
        )}
      </ul>
    </nav>
  ) : null
}
