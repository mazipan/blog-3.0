---
import { getAllPostsWithReadingTime } from '@/modules/post/common';
import List from '@/layouts/List.astro';
import Breadcrumbs from '@/components/Breadcrumbs.astro';
import FeaturedPostList from '@/components/FeaturedPostList.astro';
import PostList from '@/components/PostList.astro';
import { BreadcrumbItemHome } from '@/constants/breadcrumb';
import { CONFIG_CLIENT } from '@/config/client';
import { getPageMetadata } from '@/utils/metadata';
import { pickPaginationPropsFromPage } from '@/utils/pagination';

import type { Post } from '@/types/post';
import type { GetStaticPathsOptions, Page } from 'astro';

// [page].astro and getStaticPaths because of pagination
export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const posts: Post[] = await getAllPostsWithReadingTime();
  const pageSize = CONFIG_CLIENT.PAGE_SIZE_POST_CARD; // must take entire config here, interesting

  const pagination = paginate(posts, { pageSize });
  const featured = posts.filter((post) => post.data.featured);

  const firstPageProps = pagination[0].props;
  firstPageProps.featured = featured;

  pagination.push({
    params: {
      page: '1',
    },
    props: firstPageProps,
  });

  return pagination;
}

type Props = {
  page: Page<Post>;
  featured?: Post[];
};

// page from pagination
const { page, featured } = Astro.props;
const { data: posts } = page;

const paginationProps = pickPaginationPropsFromPage(page);

const metadata = getPageMetadata('lists/blog');

const layoutProps = { metadata, paginationProps };
const breadcrumbs = [BreadcrumbItemHome];
---

<List {...layoutProps}>
  <section slot="heading">
    <Breadcrumbs items={breadcrumbs} />
    <h1 class="b-h1">{metadata.title}</h1>
  </section>

  {Array.isArray(featured) && <FeaturedPostList posts={featured} />}

  <h3 class="b-h1">Latest Article</h3>

  <PostList posts={posts} />
</List>
