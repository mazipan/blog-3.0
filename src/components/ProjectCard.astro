---
import { Icon } from 'astro-icon/components';
import { Image } from 'astro:assets';

import { getPublishedOrUpdatedDate } from '@/modules/common';
import Link from '@/components/Link.astro';
import { IMAGE_SIZES } from '@/constants/image';
import { ROUTES } from '@/constants/routes';
import { setTransitionSlug, TRANSITION_ELEMENT_IDS } from '@/constants/transitions';
import { formatDate, formatDateIso } from '@/utils/datetime';

import type { Project } from '@/types/project';

export interface Props {
  project: Project;
}

const { project } = Astro.props;

const { slug, data } = project;
const { title, description, heroImage, heroAlt, publishDate, updatedDate, tags } = data;

const { lastAccessDate, isUpdatedDate } = getPublishedOrUpdatedDate({
  publishDate,
  updatedDate,
});

const getTransitionNameFromElementId = setTransitionSlug({ pageSlug: slug });
---

<article>
  <Image
    {...IMAGE_SIZES.RESPONSIVE.PROJECT_CARD}
    src={heroImage}
    alt={heroAlt}
    class="hover:transform-perspective mb-2 max-h-[200px] rounded-t-2xl object-cover transition-transform duration-300"
    transition:name={getTransitionNameFromElementId({
      elementId: TRANSITION_ELEMENT_IDS.POST_CARD.HERO_IMAGE,
    })}
  />

  <h4 class="b-h4 mb-0 line-clamp-2 break-words">
    <Link
      href={`${ROUTES.PROJECTS}/${slug}`}
      variant="link-heading"
      transition:name={getTransitionNameFromElementId({
        elementId: TRANSITION_ELEMENT_IDS.POST_CARD.TITLE,
      })}
    >
      {title}
    </Link>
  </h4>

  {
    description && (
      <p
        class="mb-2 text-sm text-captions"
        transition:name={getTransitionNameFromElementId({
          elementId: TRANSITION_ELEMENT_IDS.POST_CARD.DESCRIPTION,
        })}
      >
        {description}
      </p>
    )
  }

  <div class="flex items-center gap-3 text-xs text-captions">
    <span class="flex items-center gap-1">
      <Icon name={isUpdatedDate ? 'tabler:pencil' : 'tabler:clock'} class="h-4 w-4" />
      <time itemprop="datePublished" datetime={formatDateIso(lastAccessDate)}>
        {formatDate(lastAccessDate)}
      </time>
    </span>

    {
      tags.map((text) => (
        <span class="flex items-center gap-1">
          <Icon name={'tabler:tag'} class="h-4 w-4" />
          <span>#{text}</span>
        </span>
      ))
    }
  </div>
</article>
