---
import { Icon } from 'astro-icon/components';

import HeaderLink from '@/components/HeaderLink.astro';
import ThemeToggle from '@/components/ThemeToggle.astro';
import { SELECTORS } from '@/constants/dom';
import { NAVIGATION_ITEMS } from '@/constants/navigation';
import { ROUTES } from '@/constants/routes';
import { getActiveNavItemPath } from '@/utils/navigation';
import { cn } from '@/utils/styles';

const { SCROLL_TO_TOP_ID } = SELECTORS;

const { pathname: routePathname } = Astro.url;
const activeNavItemPath = getActiveNavItemPath(routePathname);

// group-[.menu-open]: increases specificity everywhere
// group-[.menu-open]:flex-col md:!flex-row, both on flex-direction
---

<header id={SCROLL_TO_TOP_ID} class="group w-full py-2 fixed top-2 z-50 px-4 lg:px-0">
  <div
    class={cn(
      'flex gap-2',
      'group-[.menu-open]:flex-col md:!flex-row md:justify-between md:items-center',
      'max-w-6xl py-2 px-4 md:mx-auto',
      'rounded-2xl border border-yellow-400',
      'bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60'
    )}
  >
    {/* mobile nav */}
    <div class="w-full md:w-auto flex justify-between items-center">
      <HeaderLink
        href={ROUTES.HOME}
        class="flex flex-row items-center gap-2 text-xl xs:text-2xl font-serif"
      >
        <span> MZP </span>
      </HeaderLink>
      <mobile-button class="md:hidden">
        <button
          aria-expanded="false"
          aria-haspopup="menu"
          aria-label="Open main menu"
          type="button"
          class="group"
        >
          <Icon name="tabler:menu-3" class="h-6 w-6 group-aria-expanded:hidden" />
          <Icon name="tabler:menu-deep" class="h-6 w-6 hidden group-aria-expanded:block" />
        </button>
      </mobile-button>
    </div>

    {/* nav items */}
    <nav
      class="select-none hidden md:block group-[.menu-open]:block mt-0 group-[.menu-open]:mt-2"
      aria-label="Site navigation"
    >
      <ul class="flex gap-4 group-[.menu-open]:flex-col md:!flex-row md:items-center">
        {
          NAVIGATION_ITEMS.map(({ title, path }) => (
            <li>
              <HeaderLink href={path} isActive={path === activeNavItemPath}>
                {title}
              </HeaderLink>
            </li>
          ))
        }
        <li class="shrink-0">
          <ThemeToggle />
        </li>
      </ul>
    </nav>
  </div>
</header>

<script>
  class MobileNavBtn extends HTMLElement {
    private headerEl: HTMLElement;
    private menuOpen: boolean;
    private mobileButtonEl: HTMLButtonElement;

    toggleMobileMenu = () => {
      this.headerEl.classList.toggle('menu-open');
      this.menuOpen = !this.menuOpen;
      this.mobileButtonEl.setAttribute('aria-expanded', this.menuOpen.toString());
    };

    constructor() {
      super();
      this.headerEl = document.getElementById('main-header')!;
      this.mobileButtonEl = this.querySelector('button') as HTMLButtonElement;
      this.menuOpen = false;

      this.mobileButtonEl.addEventListener('click', this.toggleMobileMenu);
    }
  }

  customElements.define('mobile-button', MobileNavBtn);
</script>
